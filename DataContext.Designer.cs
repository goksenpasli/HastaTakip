//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer for SQL Server tool using LINQ to SQL template.
// Code is generated on: 1.01.2018 13:04:08
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace HastaTakip
{

    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "data")]
    public partial class Veriler : System.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new System.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();

        partial void InsertKisiler(Kisiler instance);
        partial void UpdateKisiler(Kisiler instance);
        partial void DeleteKisiler(Kisiler instance);
        partial void InsertBulgular(Bulgular instance);
        partial void UpdateBulgular(Bulgular instance);
        partial void DeleteBulgular(Bulgular instance);
        partial void InsertIlceler(Ilceler instance);
        partial void UpdateIlceler(Ilceler instance);
        partial void DeleteIlceler(Ilceler instance);
        partial void InsertIller(Iller instance);
        partial void UpdateIller(Iller instance);
        partial void DeleteIller(Iller instance);
        partial void InsertFizikiMuayene(FizikiMuayene instance);
        partial void UpdateFizikiMuayene(FizikiMuayene instance);
        partial void DeleteFizikiMuayene(FizikiMuayene instance);
        partial void InsertLaboratuar(Laboratuar instance);
        partial void UpdateLaboratuar(Laboratuar instance);
        partial void DeleteLaboratuar(Laboratuar instance);
        partial void InsertTahsilat(Tahsilat instance);
        partial void UpdateTahsilat(Tahsilat instance);
        partial void DeleteTahsilat(Tahsilat instance);

        #endregion

        public Veriler() :
        base(GetConnectionString("ConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public Veriler(System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(GetConnectionString("ConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName) 
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public Veriler(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Veriler(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Veriler(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Veriler(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public System.Data.Linq.Table<Kisiler> Kisiler
        {
            get
            {
                return this.GetTable<Kisiler>();
            }
        }

        public System.Data.Linq.Table<Bulgular> Bulgular
        {
            get
            {
                return this.GetTable<Bulgular>();
            }
        }

        public System.Data.Linq.Table<Ilceler> Ilceler
        {
            get
            {
                return this.GetTable<Ilceler>();
            }
        }

        public System.Data.Linq.Table<Iller> Iller
        {
            get
            {
                return this.GetTable<Iller>();
            }
        }

        public System.Data.Linq.Table<FizikiMuayene> FizikiMuayene
        {
            get
            {
                return this.GetTable<FizikiMuayene>();
            }
        }

        public System.Data.Linq.Table<Laboratuar> Laboratuar
        {
            get
            {
                return this.GetTable<Laboratuar>();
            }
        }

        public System.Data.Linq.Table<Tahsilat> Tahsilat
        {
            get
            {
                return this.GetTable<Tahsilat>();
            }
        }
    }
}

namespace HastaTakip
{

    /// <summary>
    /// There are no comments for HastaTakip.Kisiler in the schema.
    /// </summary>
    [Table(Name = @"Kisiler")]
    public partial class Kisiler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _KisiID;

        private string _Adi;

        private string _Soyadi;

        private string _Tc;

        private string _Meslek;

        private System.DateTime _DTarihi;

        private System.DateTime _KTarihi;

        private string _Cinsiyeti;

        private string _Telefon;

        private string _Ili;

        private string _Ilcesi;

        private string _Yas;

        private string _Adresi;

        private byte[] _Resim;

        private System.Nullable<System.DateTime> _RandevuTarihi;
        #pragma warning restore 0649

        private EntitySet<Bulgular> _Bulgular;

        private EntitySet<FizikiMuayene> _FizikiMuayenes;

        private EntitySet<Laboratuar> _Laboratuars;

        private EntitySet<Tahsilat> _Tahsilats;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnKisiIDChanging(int value);
        partial void OnKisiIDChanged();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnSoyadiChanging(string value);
        partial void OnSoyadiChanged();
        partial void OnTcChanging(string value);
        partial void OnTcChanged();
        partial void OnMeslekChanging(string value);
        partial void OnMeslekChanged();
        partial void OnDTarihiChanging(System.DateTime value);
        partial void OnDTarihiChanged();
        partial void OnKTarihiChanging(System.DateTime value);
        partial void OnKTarihiChanged();
        partial void OnCinsiyetiChanging(string value);
        partial void OnCinsiyetiChanged();
        partial void OnTelefonChanging(string value);
        partial void OnTelefonChanged();
        partial void OnIliChanging(string value);
        partial void OnIliChanged();
        partial void OnIlcesiChanging(string value);
        partial void OnIlcesiChanged();
        partial void OnYasChanging(string value);
        partial void OnYasChanged();
        partial void OnAdresiChanging(string value);
        partial void OnAdresiChanged();
        partial void OnResimChanging(byte[] value);
        partial void OnResimChanged();
        partial void OnRandevuTarihiChanging(System.Nullable<System.DateTime> value);
        partial void OnRandevuTarihiChanged();
        #endregion

        public Kisiler()
        {
            this._Bulgular = new EntitySet<Bulgular>(new Action<Bulgular>(this.attach_Bulgular), new Action<Bulgular>(this.detach_Bulgular));
            this._FizikiMuayenes = new EntitySet<FizikiMuayene>(new Action<FizikiMuayene>(this.attach_FizikiMuayenes), new Action<FizikiMuayene>(this.detach_FizikiMuayenes));
            this._Laboratuars = new EntitySet<Laboratuar>(new Action<Laboratuar>(this.attach_Laboratuars), new Action<Laboratuar>(this.detach_Laboratuars));
            this._Tahsilats = new EntitySet<Tahsilat>(new Action<Tahsilat>(this.attach_Tahsilats), new Action<Tahsilat>(this.detach_Tahsilats));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for KisiID in the schema.
        /// </summary>
        [Column(Storage = "_KisiID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int KisiID
        {
            get
            {
                return this._KisiID;
            }
            set
            {
                if (this._KisiID != value)
                {
                    this.OnKisiIDChanging(value);
                    this.SendPropertyChanging("KisiID");
                    this._KisiID = value;
                    this.SendPropertyChanged("KisiID");
                    this.OnKisiIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adi in the schema.
        /// </summary>
        [Column(Storage = "_Adi", CanBeNull = false, DbType = "NVARCHAR(50) NOT NULL")]
        public string Adi
        {
            get
            {
                return this._Adi;
            }
            set
            {
                if (this._Adi != value)
                {
                    this.OnAdiChanging(value);
                    this.SendPropertyChanging("Adi");
                    this._Adi = value;
                    this.SendPropertyChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Soyadi in the schema.
        /// </summary>
        [Column(Storage = "_Soyadi", CanBeNull = false, DbType = "NVARCHAR(50) NOT NULL")]
        public string Soyadi
        {
            get
            {
                return this._Soyadi;
            }
            set
            {
                if (this._Soyadi != value)
                {
                    this.OnSoyadiChanging(value);
                    this.SendPropertyChanging("Soyadi");
                    this._Soyadi = value;
                    this.SendPropertyChanged("Soyadi");
                    this.OnSoyadiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tc in the schema.
        /// </summary>
        [Column(Storage = "_Tc", CanBeNull = false, DbType = "NVARCHAR(50) NOT NULL")]
        public string Tc
        {
            get
            {
                return this._Tc;
            }
            set
            {
                if (this._Tc != value)
                {
                    this.OnTcChanging(value);
                    this.SendPropertyChanging("Tc");
                    this._Tc = value;
                    this.SendPropertyChanged("Tc");
                    this.OnTcChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Meslek in the schema.
        /// </summary>
        [Column(Storage = "_Meslek", DbType = "NVARCHAR(50)")]
        public string Meslek
        {
            get
            {
                return this._Meslek;
            }
            set
            {
                if (this._Meslek != value)
                {
                    this.OnMeslekChanging(value);
                    this.SendPropertyChanging("Meslek");
                    this._Meslek = value;
                    this.SendPropertyChanged("Meslek");
                    this.OnMeslekChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTarihi in the schema.
        /// </summary>
        [Column(Storage = "_DTarihi", CanBeNull = false, DbType = "DATETIME NOT NULL")]
        public System.DateTime DTarihi
        {
            get
            {
                return this._DTarihi;
            }
            set
            {
                if (this._DTarihi != value)
                {
                    this.OnDTarihiChanging(value);
                    this.SendPropertyChanging("DTarihi");
                    this._DTarihi = value;
                    this.SendPropertyChanged("DTarihi");
                    this.OnDTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KTarihi in the schema.
        /// </summary>
        [Column(Storage = "_KTarihi", CanBeNull = false, DbType = "DATETIME NOT NULL")]
        public System.DateTime KTarihi
        {
            get
            {
                return this._KTarihi;
            }
            set
            {
                if (this._KTarihi != value)
                {
                    this.OnKTarihiChanging(value);
                    this.SendPropertyChanging("KTarihi");
                    this._KTarihi = value;
                    this.SendPropertyChanged("KTarihi");
                    this.OnKTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cinsiyeti in the schema.
        /// </summary>
        [Column(Storage = "_Cinsiyeti", DbType = "NVARCHAR(50)")]
        public string Cinsiyeti
        {
            get
            {
                return this._Cinsiyeti;
            }
            set
            {
                if (this._Cinsiyeti != value)
                {
                    this.OnCinsiyetiChanging(value);
                    this.SendPropertyChanging("Cinsiyeti");
                    this._Cinsiyeti = value;
                    this.SendPropertyChanged("Cinsiyeti");
                    this.OnCinsiyetiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefon in the schema.
        /// </summary>
        [Column(Storage = "_Telefon", DbType = "NVARCHAR(50)")]
        public string Telefon
        {
            get
            {
                return this._Telefon;
            }
            set
            {
                if (this._Telefon != value)
                {
                    this.OnTelefonChanging(value);
                    this.SendPropertyChanging("Telefon");
                    this._Telefon = value;
                    this.SendPropertyChanged("Telefon");
                    this.OnTelefonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ili in the schema.
        /// </summary>
        [Column(Storage = "_Ili", DbType = "NVARCHAR(50)")]
        public string Ili
        {
            get
            {
                return this._Ili;
            }
            set
            {
                if (this._Ili != value)
                {
                    this.OnIliChanging(value);
                    this.SendPropertyChanging("Ili");
                    this._Ili = value;
                    this.SendPropertyChanged("Ili");
                    this.OnIliChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ilcesi in the schema.
        /// </summary>
        [Column(Storage = "_Ilcesi", DbType = "NVARCHAR(50)")]
        public string Ilcesi
        {
            get
            {
                return this._Ilcesi;
            }
            set
            {
                if (this._Ilcesi != value)
                {
                    this.OnIlcesiChanging(value);
                    this.SendPropertyChanging("Ilcesi");
                    this._Ilcesi = value;
                    this.SendPropertyChanged("Ilcesi");
                    this.OnIlcesiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Yas in the schema.
        /// </summary>
        [Column(Storage = "_Yas", CanBeNull = false, DbType = "NVARCHAR(50) NOT NULL")]
        public string Yas
        {
            get
            {
                return this._Yas;
            }
            set
            {
                if (this._Yas != value)
                {
                    this.OnYasChanging(value);
                    this.SendPropertyChanging("Yas");
                    this._Yas = value;
                    this.SendPropertyChanged("Yas");
                    this.OnYasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adresi in the schema.
        /// </summary>
        [Column(Storage = "_Adresi", DbType = "NVARCHAR(255)")]
        public string Adresi
        {
            get
            {
                return this._Adresi;
            }
            set
            {
                if (this._Adresi != value)
                {
                    this.OnAdresiChanging(value);
                    this.SendPropertyChanging("Adresi");
                    this._Adresi = value;
                    this.SendPropertyChanged("Adresi");
                    this.OnAdresiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Resim in the schema.
        /// </summary>
        [Column(Storage = "_Resim", DbType = "IMAGE", UpdateCheck = UpdateCheck.Never)]
        public byte[] Resim
        {
            get
            {
                return this._Resim;
            }
            set
            {
                if (this._Resim != value)
                {
                    this.OnResimChanging(value);
                    this.SendPropertyChanging("Resim");
                    this._Resim = value;
                    this.SendPropertyChanged("Resim");
                    this.OnResimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RandevuTarihi in the schema.
        /// </summary>
        [Column(Storage = "_RandevuTarihi", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> RandevuTarihi
        {
            get
            {
                return this._RandevuTarihi;
            }
            set
            {
                if (this._RandevuTarihi != value)
                {
                    this.OnRandevuTarihiChanging(value);
                    this.SendPropertyChanging("RandevuTarihi");
                    this._RandevuTarihi = value;
                    this.SendPropertyChanged("RandevuTarihi");
                    this.OnRandevuTarihiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Bulgular in the schema.
        /// </summary>
        [Association(Name="Kisiler_Bulgular", Storage="_Bulgular", ThisKey="KisiID", OtherKey="KisiID", DeleteRule="CASCADE")]
        public EntitySet<Bulgular> Bulgular
        {
            get
            {
                return this._Bulgular;
            }
            set
            {
                this._Bulgular.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for FizikiMuayenes in the schema.
        /// </summary>
        [Association(Name="Kisiler_FizikiMuayene", Storage="_FizikiMuayenes", ThisKey="KisiID", OtherKey="KisiID", DeleteRule="CASCADE")]
        public EntitySet<FizikiMuayene> FizikiMuayenes
        {
            get
            {
                return this._FizikiMuayenes;
            }
            set
            {
                this._FizikiMuayenes.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Laboratuars in the schema.
        /// </summary>
        [Association(Name="Kisiler_Laboratuar", Storage="_Laboratuars", ThisKey="KisiID", OtherKey="KisiID", DeleteRule="CASCADE")]
        public EntitySet<Laboratuar> Laboratuars
        {
            get
            {
                return this._Laboratuars;
            }
            set
            {
                this._Laboratuars.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Tahsilats in the schema.
        /// </summary>
        [Association(Name="Kisiler_Tahsilat", Storage="_Tahsilats", ThisKey="KisiID", OtherKey="KisiID", DeleteRule="CASCADE")]
        public EntitySet<Tahsilat> Tahsilats
        {
            get
            {
                return this._Tahsilats;
            }
            set
            {
                this._Tahsilats.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Bulgular(Bulgular entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = this;
        }
    
        private void detach_Bulgular(Bulgular entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = null;
        }

        private void attach_FizikiMuayenes(FizikiMuayene entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = this;
        }
    
        private void detach_FizikiMuayenes(FizikiMuayene entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = null;
        }

        private void attach_Laboratuars(Laboratuar entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = this;
        }
    
        private void detach_Laboratuars(Laboratuar entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = null;
        }

        private void attach_Tahsilats(Tahsilat entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = this;
        }
    
        private void detach_Tahsilats(Tahsilat entity)
        {
            this.SendPropertyChanging();
            entity.Kisiler = null;
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.Bulgular in the schema.
    /// </summary>
    [Table(Name = @"Bulgular")]
    public partial class Bulgular : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _BulgularID;

        private System.Nullable<int> _KisiID;

        private string _Kulak;

        private string _Burun;

        private string _Bogaz;

        private string _Göz;

        private string _Solunum;

        private string _Sindirim;

        private string _Dolasim;

        private string _Deri;

        private string _Sikayetler;

        private string _Uriner;

        private string _Yenidogan;

        private string _Ilac;

        private string _Hastalik;
        #pragma warning restore 0649

        private EntityRef<Kisiler> _Kisiler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBulgularIDChanging(int value);
        partial void OnBulgularIDChanged();
        partial void OnKisiIDChanging(System.Nullable<int> value);
        partial void OnKisiIDChanged();
        partial void OnKulakChanging(string value);
        partial void OnKulakChanged();
        partial void OnBurunChanging(string value);
        partial void OnBurunChanged();
        partial void OnBogazChanging(string value);
        partial void OnBogazChanged();
        partial void OnGözChanging(string value);
        partial void OnGözChanged();
        partial void OnSolunumChanging(string value);
        partial void OnSolunumChanged();
        partial void OnSindirimChanging(string value);
        partial void OnSindirimChanged();
        partial void OnDolasimChanging(string value);
        partial void OnDolasimChanged();
        partial void OnDeriChanging(string value);
        partial void OnDeriChanged();
        partial void OnSikayetlerChanging(string value);
        partial void OnSikayetlerChanged();
        partial void OnUrinerChanging(string value);
        partial void OnUrinerChanged();
        partial void OnYenidoganChanging(string value);
        partial void OnYenidoganChanged();
        partial void OnIlacChanging(string value);
        partial void OnIlacChanged();
        partial void OnHastalikChanging(string value);
        partial void OnHastalikChanged();
        #endregion

        public Bulgular()
        {
            this._Kisiler  = default(EntityRef<Kisiler>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for BulgularID in the schema.
        /// </summary>
        [Column(Storage = "_BulgularID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int BulgularID
        {
            get
            {
                return this._BulgularID;
            }
            set
            {
                if (this._BulgularID != value)
                {
                    this.OnBulgularIDChanging(value);
                    this.SendPropertyChanging("BulgularID");
                    this._BulgularID = value;
                    this.SendPropertyChanged("BulgularID");
                    this.OnBulgularIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KisiID in the schema.
        /// </summary>
        [Column(Storage = "_KisiID", DbType = "INT")]
        public System.Nullable<int> KisiID
        {
            get
            {
                return this._KisiID;
            }
            set
            {
                if (this._KisiID != value)
                {
                    if (this._Kisiler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKisiIDChanging(value);
                    this.SendPropertyChanging("KisiID");
                    this._KisiID = value;
                    this.SendPropertyChanged("KisiID");
                    this.OnKisiIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kulak in the schema.
        /// </summary>
        [Column(Storage = "_Kulak", DbType = "NVARCHAR(4000)")]
        public string Kulak
        {
            get
            {
                return this._Kulak;
            }
            set
            {
                if (this._Kulak != value)
                {
                    this.OnKulakChanging(value);
                    this.SendPropertyChanging("Kulak");
                    this._Kulak = value;
                    this.SendPropertyChanged("Kulak");
                    this.OnKulakChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Burun in the schema.
        /// </summary>
        [Column(Storage = "_Burun", DbType = "NVARCHAR(4000)")]
        public string Burun
        {
            get
            {
                return this._Burun;
            }
            set
            {
                if (this._Burun != value)
                {
                    this.OnBurunChanging(value);
                    this.SendPropertyChanging("Burun");
                    this._Burun = value;
                    this.SendPropertyChanged("Burun");
                    this.OnBurunChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Bogaz in the schema.
        /// </summary>
        [Column(Storage = "_Bogaz", DbType = "NVARCHAR(4000)")]
        public string Bogaz
        {
            get
            {
                return this._Bogaz;
            }
            set
            {
                if (this._Bogaz != value)
                {
                    this.OnBogazChanging(value);
                    this.SendPropertyChanging("Bogaz");
                    this._Bogaz = value;
                    this.SendPropertyChanged("Bogaz");
                    this.OnBogazChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Göz in the schema.
        /// </summary>
        [Column(Storage = "_Göz", DbType = "NVARCHAR(4000)")]
        public string Göz
        {
            get
            {
                return this._Göz;
            }
            set
            {
                if (this._Göz != value)
                {
                    this.OnGözChanging(value);
                    this.SendPropertyChanging("Göz");
                    this._Göz = value;
                    this.SendPropertyChanged("Göz");
                    this.OnGözChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Solunum in the schema.
        /// </summary>
        [Column(Storage = "_Solunum", DbType = "NVARCHAR(4000)")]
        public string Solunum
        {
            get
            {
                return this._Solunum;
            }
            set
            {
                if (this._Solunum != value)
                {
                    this.OnSolunumChanging(value);
                    this.SendPropertyChanging("Solunum");
                    this._Solunum = value;
                    this.SendPropertyChanged("Solunum");
                    this.OnSolunumChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Sindirim in the schema.
        /// </summary>
        [Column(Storage = "_Sindirim", DbType = "NVARCHAR(4000)")]
        public string Sindirim
        {
            get
            {
                return this._Sindirim;
            }
            set
            {
                if (this._Sindirim != value)
                {
                    this.OnSindirimChanging(value);
                    this.SendPropertyChanging("Sindirim");
                    this._Sindirim = value;
                    this.SendPropertyChanged("Sindirim");
                    this.OnSindirimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Dolasim in the schema.
        /// </summary>
        [Column(Storage = "_Dolasim", DbType = "NVARCHAR(4000)")]
        public string Dolasim
        {
            get
            {
                return this._Dolasim;
            }
            set
            {
                if (this._Dolasim != value)
                {
                    this.OnDolasimChanging(value);
                    this.SendPropertyChanging("Dolasim");
                    this._Dolasim = value;
                    this.SendPropertyChanged("Dolasim");
                    this.OnDolasimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Deri in the schema.
        /// </summary>
        [Column(Storage = "_Deri", DbType = "NVARCHAR(4000)")]
        public string Deri
        {
            get
            {
                return this._Deri;
            }
            set
            {
                if (this._Deri != value)
                {
                    this.OnDeriChanging(value);
                    this.SendPropertyChanging("Deri");
                    this._Deri = value;
                    this.SendPropertyChanged("Deri");
                    this.OnDeriChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Sikayetler in the schema.
        /// </summary>
        [Column(Storage = "_Sikayetler", DbType = "NVARCHAR(4000)")]
        public string Sikayetler
        {
            get
            {
                return this._Sikayetler;
            }
            set
            {
                if (this._Sikayetler != value)
                {
                    this.OnSikayetlerChanging(value);
                    this.SendPropertyChanging("Sikayetler");
                    this._Sikayetler = value;
                    this.SendPropertyChanged("Sikayetler");
                    this.OnSikayetlerChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Uriner in the schema.
        /// </summary>
        [Column(Storage = "_Uriner", DbType = "NVARCHAR(4000)")]
        public string Uriner
        {
            get
            {
                return this._Uriner;
            }
            set
            {
                if (this._Uriner != value)
                {
                    this.OnUrinerChanging(value);
                    this.SendPropertyChanging("Uriner");
                    this._Uriner = value;
                    this.SendPropertyChanged("Uriner");
                    this.OnUrinerChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Yenidogan in the schema.
        /// </summary>
        [Column(Storage = "_Yenidogan", DbType = "NVARCHAR(4000)")]
        public string Yenidogan
        {
            get
            {
                return this._Yenidogan;
            }
            set
            {
                if (this._Yenidogan != value)
                {
                    this.OnYenidoganChanging(value);
                    this.SendPropertyChanging("Yenidogan");
                    this._Yenidogan = value;
                    this.SendPropertyChanged("Yenidogan");
                    this.OnYenidoganChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ilac in the schema.
        /// </summary>
        [Column(Storage = "_Ilac", DbType = "NVARCHAR(4000)")]
        public string Ilac
        {
            get
            {
                return this._Ilac;
            }
            set
            {
                if (this._Ilac != value)
                {
                    this.OnIlacChanging(value);
                    this.SendPropertyChanging("Ilac");
                    this._Ilac = value;
                    this.SendPropertyChanged("Ilac");
                    this.OnIlacChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Hastalik in the schema.
        /// </summary>
        [Column(Storage = "_Hastalik", DbType = "NVARCHAR(4000)")]
        public string Hastalik
        {
            get
            {
                return this._Hastalik;
            }
            set
            {
                if (this._Hastalik != value)
                {
                    this.OnHastalikChanging(value);
                    this.SendPropertyChanging("Hastalik");
                    this._Hastalik = value;
                    this.SendPropertyChanged("Hastalik");
                    this.OnHastalikChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kisiler in the schema.
        /// </summary>
        [Association(Name="Kisiler_Bulgular", Storage="_Kisiler", ThisKey="KisiID", OtherKey="KisiID", IsForeignKey=true)]
        public Kisiler Kisiler
        {
            get
            {
                return this._Kisiler.Entity;
            }
            set
            {
                Kisiler previousValue = this._Kisiler.Entity;
                if ((previousValue != value) || (this._Kisiler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Kisiler");
                    if (previousValue != null)
                    {
                        this._Kisiler.Entity = null;
                        previousValue.Bulgular.Remove(this);
                    }
                    this._Kisiler.Entity = value;
                    if (value != null)
                    {
                        this._KisiID = value.KisiID;
                        value.Bulgular.Add(this);
                    }
                    else
                    {
                        this._KisiID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Kisiler");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.Ilceler in the schema.
    /// </summary>
    [Table(Name = @"ilceler")]
    public partial class Ilceler : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IlceNo;

        private string _Isim;

        private System.Nullable<int> _IlNo;
        #pragma warning restore 0649

        private EntityRef<Iller> _Iller;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIlceNoChanging(int value);
        partial void OnIlceNoChanged();
        partial void OnIsimChanging(string value);
        partial void OnIsimChanged();
        partial void OnIlNoChanging(System.Nullable<int> value);
        partial void OnIlNoChanged();
        #endregion

        public Ilceler()
        {
            this._Iller  = default(EntityRef<Iller>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IlceNo in the schema.
        /// </summary>
        [Column(Name = @"ilce_no", Storage = "_IlceNo", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int IlceNo
        {
            get
            {
                return this._IlceNo;
            }
            set
            {
                if (this._IlceNo != value)
                {
                    this.OnIlceNoChanging(value);
                    this.SendPropertyChanging("IlceNo");
                    this._IlceNo = value;
                    this.SendPropertyChanged("IlceNo");
                    this.OnIlceNoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Isim in the schema.
        /// </summary>
        [Column(Name = @"isim", Storage = "_Isim", DbType = "NVARCHAR(50)")]
        public string Isim
        {
            get
            {
                return this._Isim;
            }
            set
            {
                if (this._Isim != value)
                {
                    this.OnIsimChanging(value);
                    this.SendPropertyChanging("Isim");
                    this._Isim = value;
                    this.SendPropertyChanged("Isim");
                    this.OnIsimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IlNo in the schema.
        /// </summary>
        [Column(Name = @"il_no", Storage = "_IlNo", DbType = "INT")]
        public System.Nullable<int> IlNo
        {
            get
            {
                return this._IlNo;
            }
            set
            {
                if (this._IlNo != value)
                {
                    if (this._Iller.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIlNoChanging(value);
                    this.SendPropertyChanging("IlNo");
                    this._IlNo = value;
                    this.SendPropertyChanged("IlNo");
                    this.OnIlNoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Iller in the schema.
        /// </summary>
        [Association(Name="Iller_Ilceler", Storage="_Iller", ThisKey="IlNo", OtherKey="IlNo", IsForeignKey=true)]
        public Iller Iller
        {
            get
            {
                return this._Iller.Entity;
            }
            set
            {
                Iller previousValue = this._Iller.Entity;
                if ((previousValue != value) || (this._Iller.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Iller");
                    if (previousValue != null)
                    {
                        this._Iller.Entity = null;
                        previousValue.Ilceler.Remove(this);
                    }
                    this._Iller.Entity = value;
                    if (value != null)
                    {
                        this._IlNo = value.IlNo;
                        value.Ilceler.Add(this);
                    }
                    else
                    {
                        this._IlNo = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Iller");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.Iller in the schema.
    /// </summary>
    [Table(Name = @"iller")]
    public partial class Iller : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IlNo;

        private string _Isim;
        #pragma warning restore 0649

        private EntitySet<Ilceler> _Ilceler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIlNoChanging(int value);
        partial void OnIlNoChanged();
        partial void OnIsimChanging(string value);
        partial void OnIsimChanged();
        #endregion

        public Iller()
        {
            this._Ilceler = new EntitySet<Ilceler>(new Action<Ilceler>(this.attach_Ilceler), new Action<Ilceler>(this.detach_Ilceler));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IlNo in the schema.
        /// </summary>
        [Column(Name = @"il_no", Storage = "_IlNo", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int IlNo
        {
            get
            {
                return this._IlNo;
            }
            set
            {
                if (this._IlNo != value)
                {
                    this.OnIlNoChanging(value);
                    this.SendPropertyChanging("IlNo");
                    this._IlNo = value;
                    this.SendPropertyChanged("IlNo");
                    this.OnIlNoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Isim in the schema.
        /// </summary>
        [Column(Name = @"isim", Storage = "_Isim", DbType = "NVARCHAR(50)")]
        public string Isim
        {
            get
            {
                return this._Isim;
            }
            set
            {
                if (this._Isim != value)
                {
                    this.OnIsimChanging(value);
                    this.SendPropertyChanging("Isim");
                    this._Isim = value;
                    this.SendPropertyChanged("Isim");
                    this.OnIsimChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ilceler in the schema.
        /// </summary>
        [Association(Name="Iller_Ilceler", Storage="_Ilceler", ThisKey="IlNo", OtherKey="IlNo", DeleteRule="NO ACTION")]
        public EntitySet<Ilceler> Ilceler
        {
            get
            {
                return this._Ilceler;
            }
            set
            {
                this._Ilceler.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Ilceler(Ilceler entity)
        {
            this.SendPropertyChanging();
            entity.Iller = this;
        }
    
        private void detach_Ilceler(Ilceler entity)
        {
            this.SendPropertyChanging();
            entity.Iller = null;
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.FizikiMuayene in the schema.
    /// </summary>
    [Table(Name = @"FizikiMuayene")]
    public partial class FizikiMuayene : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _FizikiMuayeneID;

        private System.Nullable<int> _KisiID;

        private string _Ates;

        private string _Solunum;

        private string _Nabiz;

        private string _Tansiyon;

        private string _Kilo;

        private string _Boy;
        #pragma warning restore 0649

        private EntityRef<Kisiler> _Kisiler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFizikiMuayeneIDChanging(int value);
        partial void OnFizikiMuayeneIDChanged();
        partial void OnKisiIDChanging(System.Nullable<int> value);
        partial void OnKisiIDChanged();
        partial void OnAtesChanging(string value);
        partial void OnAtesChanged();
        partial void OnSolunumChanging(string value);
        partial void OnSolunumChanged();
        partial void OnNabizChanging(string value);
        partial void OnNabizChanged();
        partial void OnTansiyonChanging(string value);
        partial void OnTansiyonChanged();
        partial void OnKiloChanging(string value);
        partial void OnKiloChanged();
        partial void OnBoyChanging(string value);
        partial void OnBoyChanged();
        #endregion

        public FizikiMuayene()
        {
            this._Kisiler  = default(EntityRef<Kisiler>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for FizikiMuayeneID in the schema.
        /// </summary>
        [Column(Storage = "_FizikiMuayeneID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int FizikiMuayeneID
        {
            get
            {
                return this._FizikiMuayeneID;
            }
            set
            {
                if (this._FizikiMuayeneID != value)
                {
                    this.OnFizikiMuayeneIDChanging(value);
                    this.SendPropertyChanging("FizikiMuayeneID");
                    this._FizikiMuayeneID = value;
                    this.SendPropertyChanged("FizikiMuayeneID");
                    this.OnFizikiMuayeneIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KisiID in the schema.
        /// </summary>
        [Column(Storage = "_KisiID", DbType = "INT")]
        public System.Nullable<int> KisiID
        {
            get
            {
                return this._KisiID;
            }
            set
            {
                if (this._KisiID != value)
                {
                    if (this._Kisiler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKisiIDChanging(value);
                    this.SendPropertyChanging("KisiID");
                    this._KisiID = value;
                    this.SendPropertyChanged("KisiID");
                    this.OnKisiIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ates in the schema.
        /// </summary>
        [Column(Storage = "_Ates", DbType = "NVARCHAR(50)")]
        public string Ates
        {
            get
            {
                return this._Ates;
            }
            set
            {
                if (this._Ates != value)
                {
                    this.OnAtesChanging(value);
                    this.SendPropertyChanging("Ates");
                    this._Ates = value;
                    this.SendPropertyChanged("Ates");
                    this.OnAtesChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Solunum in the schema.
        /// </summary>
        [Column(Storage = "_Solunum", DbType = "NVARCHAR(50)")]
        public string Solunum
        {
            get
            {
                return this._Solunum;
            }
            set
            {
                if (this._Solunum != value)
                {
                    this.OnSolunumChanging(value);
                    this.SendPropertyChanging("Solunum");
                    this._Solunum = value;
                    this.SendPropertyChanged("Solunum");
                    this.OnSolunumChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nabiz in the schema.
        /// </summary>
        [Column(Storage = "_Nabiz", DbType = "NVARCHAR(50)")]
        public string Nabiz
        {
            get
            {
                return this._Nabiz;
            }
            set
            {
                if (this._Nabiz != value)
                {
                    this.OnNabizChanging(value);
                    this.SendPropertyChanging("Nabiz");
                    this._Nabiz = value;
                    this.SendPropertyChanged("Nabiz");
                    this.OnNabizChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tansiyon in the schema.
        /// </summary>
        [Column(Storage = "_Tansiyon", DbType = "NVARCHAR(50)")]
        public string Tansiyon
        {
            get
            {
                return this._Tansiyon;
            }
            set
            {
                if (this._Tansiyon != value)
                {
                    this.OnTansiyonChanging(value);
                    this.SendPropertyChanging("Tansiyon");
                    this._Tansiyon = value;
                    this.SendPropertyChanged("Tansiyon");
                    this.OnTansiyonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kilo in the schema.
        /// </summary>
        [Column(Storage = "_Kilo", DbType = "NVARCHAR(50)")]
        public string Kilo
        {
            get
            {
                return this._Kilo;
            }
            set
            {
                if (this._Kilo != value)
                {
                    this.OnKiloChanging(value);
                    this.SendPropertyChanging("Kilo");
                    this._Kilo = value;
                    this.SendPropertyChanged("Kilo");
                    this.OnKiloChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Boy in the schema.
        /// </summary>
        [Column(Storage = "_Boy", DbType = "NVARCHAR(50)")]
        public string Boy
        {
            get
            {
                return this._Boy;
            }
            set
            {
                if (this._Boy != value)
                {
                    this.OnBoyChanging(value);
                    this.SendPropertyChanging("Boy");
                    this._Boy = value;
                    this.SendPropertyChanged("Boy");
                    this.OnBoyChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kisiler in the schema.
        /// </summary>
        [Association(Name="Kisiler_FizikiMuayene", Storage="_Kisiler", ThisKey="KisiID", OtherKey="KisiID", IsForeignKey=true)]
        public Kisiler Kisiler
        {
            get
            {
                return this._Kisiler.Entity;
            }
            set
            {
                Kisiler previousValue = this._Kisiler.Entity;
                if ((previousValue != value) || (this._Kisiler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Kisiler");
                    if (previousValue != null)
                    {
                        this._Kisiler.Entity = null;
                        previousValue.FizikiMuayenes.Remove(this);
                    }
                    this._Kisiler.Entity = value;
                    if (value != null)
                    {
                        this._KisiID = value.KisiID;
                        value.FizikiMuayenes.Add(this);
                    }
                    else
                    {
                        this._KisiID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Kisiler");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.Laboratuar in the schema.
    /// </summary>
    [Table(Name = @"Laboratuar")]
    public partial class Laboratuar : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _LaboratuarID;

        private string _WBC;

        private string _HB;

        private string _HCT;

        private string _PLT;

        private string _MCV;

        private string _AKŞ;

        private string _TKŞ;

        private string _ÜRE;

        private string _KREATİNİN;

        private string _ALT;

        private string _AST;

        private string _ALKF;

        private string _GGT;

        private string _TPROTEİN;

        private string _ALBUMİN;

        private string _NA;

        private string _K;

        private string _CA;

        private string _P;

        private string _TKOL;

        private string _TG;

        private string _LDL;

        private string _HDL;

        private string _VLDL;

        private string _HBA1C;

        private string _DEMİR;

        private string _TDEMİRBK;

        private string _FERRİTTİN;

        private string _B12;

        private string _FOLAT;

        private string _TBİL;

        private string _DBİL;

        private string _LDH;

        private string _SEDİM;

        private string _CRP;

        private string _CPK;

        private string _ÜRİKASİT;

        private string _GFR;

        private System.Nullable<int> _KisiID;
        #pragma warning restore 0649

        private EntityRef<Kisiler> _Kisiler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLaboratuarIDChanging(int value);
        partial void OnLaboratuarIDChanged();
        partial void OnWBCChanging(string value);
        partial void OnWBCChanged();
        partial void OnHBChanging(string value);
        partial void OnHBChanged();
        partial void OnHCTChanging(string value);
        partial void OnHCTChanged();
        partial void OnPLTChanging(string value);
        partial void OnPLTChanged();
        partial void OnMCVChanging(string value);
        partial void OnMCVChanged();
        partial void OnAKŞChanging(string value);
        partial void OnAKŞChanged();
        partial void OnTKŞChanging(string value);
        partial void OnTKŞChanged();
        partial void OnÜREChanging(string value);
        partial void OnÜREChanged();
        partial void OnKREATİNİNChanging(string value);
        partial void OnKREATİNİNChanged();
        partial void OnALTChanging(string value);
        partial void OnALTChanged();
        partial void OnASTChanging(string value);
        partial void OnASTChanged();
        partial void OnALKFChanging(string value);
        partial void OnALKFChanged();
        partial void OnGGTChanging(string value);
        partial void OnGGTChanged();
        partial void OnTPROTEİNChanging(string value);
        partial void OnTPROTEİNChanged();
        partial void OnALBUMİNChanging(string value);
        partial void OnALBUMİNChanged();
        partial void OnNAChanging(string value);
        partial void OnNAChanged();
        partial void OnKChanging(string value);
        partial void OnKChanged();
        partial void OnCAChanging(string value);
        partial void OnCAChanged();
        partial void OnPChanging(string value);
        partial void OnPChanged();
        partial void OnTKOLChanging(string value);
        partial void OnTKOLChanged();
        partial void OnTGChanging(string value);
        partial void OnTGChanged();
        partial void OnLDLChanging(string value);
        partial void OnLDLChanged();
        partial void OnHDLChanging(string value);
        partial void OnHDLChanged();
        partial void OnVLDLChanging(string value);
        partial void OnVLDLChanged();
        partial void OnHBA1CChanging(string value);
        partial void OnHBA1CChanged();
        partial void OnDEMİRChanging(string value);
        partial void OnDEMİRChanged();
        partial void OnTDEMİRBKChanging(string value);
        partial void OnTDEMİRBKChanged();
        partial void OnFERRİTTİNChanging(string value);
        partial void OnFERRİTTİNChanged();
        partial void OnB12Changing(string value);
        partial void OnB12Changed();
        partial void OnFOLATChanging(string value);
        partial void OnFOLATChanged();
        partial void OnTBİLChanging(string value);
        partial void OnTBİLChanged();
        partial void OnDBİLChanging(string value);
        partial void OnDBİLChanged();
        partial void OnLDHChanging(string value);
        partial void OnLDHChanged();
        partial void OnSEDİMChanging(string value);
        partial void OnSEDİMChanged();
        partial void OnCRPChanging(string value);
        partial void OnCRPChanged();
        partial void OnCPKChanging(string value);
        partial void OnCPKChanged();
        partial void OnÜRİKASİTChanging(string value);
        partial void OnÜRİKASİTChanged();
        partial void OnGFRChanging(string value);
        partial void OnGFRChanged();
        partial void OnKisiIDChanging(System.Nullable<int> value);
        partial void OnKisiIDChanged();
        #endregion

        public Laboratuar()
        {
            this._Kisiler  = default(EntityRef<Kisiler>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for LaboratuarID in the schema.
        /// </summary>
        [Column(Storage = "_LaboratuarID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int LaboratuarID
        {
            get
            {
                return this._LaboratuarID;
            }
            set
            {
                if (this._LaboratuarID != value)
                {
                    this.OnLaboratuarIDChanging(value);
                    this.SendPropertyChanging("LaboratuarID");
                    this._LaboratuarID = value;
                    this.SendPropertyChanged("LaboratuarID");
                    this.OnLaboratuarIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WBC in the schema.
        /// </summary>
        [Column(Storage = "_WBC", DbType = "NVARCHAR(50)")]
        public string WBC
        {
            get
            {
                return this._WBC;
            }
            set
            {
                if (this._WBC != value)
                {
                    this.OnWBCChanging(value);
                    this.SendPropertyChanging("WBC");
                    this._WBC = value;
                    this.SendPropertyChanged("WBC");
                    this.OnWBCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HB in the schema.
        /// </summary>
        [Column(Storage = "_HB", DbType = "NVARCHAR(50)")]
        public string HB
        {
            get
            {
                return this._HB;
            }
            set
            {
                if (this._HB != value)
                {
                    this.OnHBChanging(value);
                    this.SendPropertyChanging("HB");
                    this._HB = value;
                    this.SendPropertyChanged("HB");
                    this.OnHBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HCT in the schema.
        /// </summary>
        [Column(Storage = "_HCT", DbType = "NVARCHAR(50)")]
        public string HCT
        {
            get
            {
                return this._HCT;
            }
            set
            {
                if (this._HCT != value)
                {
                    this.OnHCTChanging(value);
                    this.SendPropertyChanging("HCT");
                    this._HCT = value;
                    this.SendPropertyChanged("HCT");
                    this.OnHCTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PLT in the schema.
        /// </summary>
        [Column(Storage = "_PLT", DbType = "NVARCHAR(50)")]
        public string PLT
        {
            get
            {
                return this._PLT;
            }
            set
            {
                if (this._PLT != value)
                {
                    this.OnPLTChanging(value);
                    this.SendPropertyChanging("PLT");
                    this._PLT = value;
                    this.SendPropertyChanged("PLT");
                    this.OnPLTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MCV in the schema.
        /// </summary>
        [Column(Storage = "_MCV", DbType = "NVARCHAR(50)")]
        public string MCV
        {
            get
            {
                return this._MCV;
            }
            set
            {
                if (this._MCV != value)
                {
                    this.OnMCVChanging(value);
                    this.SendPropertyChanging("MCV");
                    this._MCV = value;
                    this.SendPropertyChanged("MCV");
                    this.OnMCVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AKŞ in the schema.
        /// </summary>
        [Column(Storage = "_AKŞ", DbType = "NVARCHAR(50)")]
        public string AKŞ
        {
            get
            {
                return this._AKŞ;
            }
            set
            {
                if (this._AKŞ != value)
                {
                    this.OnAKŞChanging(value);
                    this.SendPropertyChanging("AKŞ");
                    this._AKŞ = value;
                    this.SendPropertyChanged("AKŞ");
                    this.OnAKŞChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TKŞ in the schema.
        /// </summary>
        [Column(Storage = "_TKŞ", DbType = "NVARCHAR(50)")]
        public string TKŞ
        {
            get
            {
                return this._TKŞ;
            }
            set
            {
                if (this._TKŞ != value)
                {
                    this.OnTKŞChanging(value);
                    this.SendPropertyChanging("TKŞ");
                    this._TKŞ = value;
                    this.SendPropertyChanged("TKŞ");
                    this.OnTKŞChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ÜRE in the schema.
        /// </summary>
        [Column(Storage = "_ÜRE", DbType = "NVARCHAR(50)")]
        public string ÜRE
        {
            get
            {
                return this._ÜRE;
            }
            set
            {
                if (this._ÜRE != value)
                {
                    this.OnÜREChanging(value);
                    this.SendPropertyChanging("ÜRE");
                    this._ÜRE = value;
                    this.SendPropertyChanged("ÜRE");
                    this.OnÜREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KREATİNİN in the schema.
        /// </summary>
        [Column(Storage = "_KREATİNİN", DbType = "NVARCHAR(50)")]
        public string KREATİNİN
        {
            get
            {
                return this._KREATİNİN;
            }
            set
            {
                if (this._KREATİNİN != value)
                {
                    this.OnKREATİNİNChanging(value);
                    this.SendPropertyChanging("KREATİNİN");
                    this._KREATİNİN = value;
                    this.SendPropertyChanged("KREATİNİN");
                    this.OnKREATİNİNChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ALT in the schema.
        /// </summary>
        [Column(Storage = "_ALT", DbType = "NVARCHAR(50)")]
        public string ALT
        {
            get
            {
                return this._ALT;
            }
            set
            {
                if (this._ALT != value)
                {
                    this.OnALTChanging(value);
                    this.SendPropertyChanging("ALT");
                    this._ALT = value;
                    this.SendPropertyChanged("ALT");
                    this.OnALTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AST in the schema.
        /// </summary>
        [Column(Storage = "_AST", DbType = "NVARCHAR(50)")]
        public string AST
        {
            get
            {
                return this._AST;
            }
            set
            {
                if (this._AST != value)
                {
                    this.OnASTChanging(value);
                    this.SendPropertyChanging("AST");
                    this._AST = value;
                    this.SendPropertyChanged("AST");
                    this.OnASTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ALKF in the schema.
        /// </summary>
        [Column(Name = @"[ALK F]", Storage = "_ALKF", DbType = "NVARCHAR(50)")]
        public string ALKF
        {
            get
            {
                return this._ALKF;
            }
            set
            {
                if (this._ALKF != value)
                {
                    this.OnALKFChanging(value);
                    this.SendPropertyChanging("ALKF");
                    this._ALKF = value;
                    this.SendPropertyChanged("ALKF");
                    this.OnALKFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GGT in the schema.
        /// </summary>
        [Column(Storage = "_GGT", DbType = "NVARCHAR(50)")]
        public string GGT
        {
            get
            {
                return this._GGT;
            }
            set
            {
                if (this._GGT != value)
                {
                    this.OnGGTChanging(value);
                    this.SendPropertyChanging("GGT");
                    this._GGT = value;
                    this.SendPropertyChanged("GGT");
                    this.OnGGTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TPROTEİN in the schema.
        /// </summary>
        [Column(Storage = "_TPROTEİN", DbType = "NVARCHAR(50)")]
        public string TPROTEİN
        {
            get
            {
                return this._TPROTEİN;
            }
            set
            {
                if (this._TPROTEİN != value)
                {
                    this.OnTPROTEİNChanging(value);
                    this.SendPropertyChanging("TPROTEİN");
                    this._TPROTEİN = value;
                    this.SendPropertyChanged("TPROTEİN");
                    this.OnTPROTEİNChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ALBUMİN in the schema.
        /// </summary>
        [Column(Storage = "_ALBUMİN", DbType = "NVARCHAR(50)")]
        public string ALBUMİN
        {
            get
            {
                return this._ALBUMİN;
            }
            set
            {
                if (this._ALBUMİN != value)
                {
                    this.OnALBUMİNChanging(value);
                    this.SendPropertyChanging("ALBUMİN");
                    this._ALBUMİN = value;
                    this.SendPropertyChanged("ALBUMİN");
                    this.OnALBUMİNChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NA in the schema.
        /// </summary>
        [Column(Storage = "_NA", DbType = "NVARCHAR(50)")]
        public string NA
        {
            get
            {
                return this._NA;
            }
            set
            {
                if (this._NA != value)
                {
                    this.OnNAChanging(value);
                    this.SendPropertyChanging("NA");
                    this._NA = value;
                    this.SendPropertyChanged("NA");
                    this.OnNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for K in the schema.
        /// </summary>
        [Column(Storage = "_K", DbType = "NVARCHAR(50)")]
        public string K
        {
            get
            {
                return this._K;
            }
            set
            {
                if (this._K != value)
                {
                    this.OnKChanging(value);
                    this.SendPropertyChanging("K");
                    this._K = value;
                    this.SendPropertyChanged("K");
                    this.OnKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CA in the schema.
        /// </summary>
        [Column(Storage = "_CA", DbType = "NVARCHAR(50)")]
        public string CA
        {
            get
            {
                return this._CA;
            }
            set
            {
                if (this._CA != value)
                {
                    this.OnCAChanging(value);
                    this.SendPropertyChanging("CA");
                    this._CA = value;
                    this.SendPropertyChanged("CA");
                    this.OnCAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for P in the schema.
        /// </summary>
        [Column(Storage = "_P", DbType = "NVARCHAR(50)")]
        public string P
        {
            get
            {
                return this._P;
            }
            set
            {
                if (this._P != value)
                {
                    this.OnPChanging(value);
                    this.SendPropertyChanging("P");
                    this._P = value;
                    this.SendPropertyChanged("P");
                    this.OnPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TKOL in the schema.
        /// </summary>
        [Column(Name = @"[T.KOL]", Storage = "_TKOL", DbType = "NVARCHAR(50)")]
        public string TKOL
        {
            get
            {
                return this._TKOL;
            }
            set
            {
                if (this._TKOL != value)
                {
                    this.OnTKOLChanging(value);
                    this.SendPropertyChanging("TKOL");
                    this._TKOL = value;
                    this.SendPropertyChanged("TKOL");
                    this.OnTKOLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TG in the schema.
        /// </summary>
        [Column(Storage = "_TG", DbType = "NVARCHAR(50)")]
        public string TG
        {
            get
            {
                return this._TG;
            }
            set
            {
                if (this._TG != value)
                {
                    this.OnTGChanging(value);
                    this.SendPropertyChanging("TG");
                    this._TG = value;
                    this.SendPropertyChanged("TG");
                    this.OnTGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LDL in the schema.
        /// </summary>
        [Column(Storage = "_LDL", DbType = "NVARCHAR(50)")]
        public string LDL
        {
            get
            {
                return this._LDL;
            }
            set
            {
                if (this._LDL != value)
                {
                    this.OnLDLChanging(value);
                    this.SendPropertyChanging("LDL");
                    this._LDL = value;
                    this.SendPropertyChanged("LDL");
                    this.OnLDLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HDL in the schema.
        /// </summary>
        [Column(Storage = "_HDL", DbType = "NVARCHAR(50)")]
        public string HDL
        {
            get
            {
                return this._HDL;
            }
            set
            {
                if (this._HDL != value)
                {
                    this.OnHDLChanging(value);
                    this.SendPropertyChanging("HDL");
                    this._HDL = value;
                    this.SendPropertyChanged("HDL");
                    this.OnHDLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VLDL in the schema.
        /// </summary>
        [Column(Storage = "_VLDL", DbType = "NVARCHAR(50)")]
        public string VLDL
        {
            get
            {
                return this._VLDL;
            }
            set
            {
                if (this._VLDL != value)
                {
                    this.OnVLDLChanging(value);
                    this.SendPropertyChanging("VLDL");
                    this._VLDL = value;
                    this.SendPropertyChanged("VLDL");
                    this.OnVLDLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HBA1C in the schema.
        /// </summary>
        [Column(Storage = "_HBA1C", DbType = "NVARCHAR(50)")]
        public string HBA1C
        {
            get
            {
                return this._HBA1C;
            }
            set
            {
                if (this._HBA1C != value)
                {
                    this.OnHBA1CChanging(value);
                    this.SendPropertyChanging("HBA1C");
                    this._HBA1C = value;
                    this.SendPropertyChanged("HBA1C");
                    this.OnHBA1CChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMİR in the schema.
        /// </summary>
        [Column(Storage = "_DEMİR", DbType = "NVARCHAR(50)")]
        public string DEMİR
        {
            get
            {
                return this._DEMİR;
            }
            set
            {
                if (this._DEMİR != value)
                {
                    this.OnDEMİRChanging(value);
                    this.SendPropertyChanging("DEMİR");
                    this._DEMİR = value;
                    this.SendPropertyChanged("DEMİR");
                    this.OnDEMİRChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TDEMİRBK in the schema.
        /// </summary>
        [Column(Name = @"[T.DEMİR BK]", Storage = "_TDEMİRBK", DbType = "NVARCHAR(50)")]
        public string TDEMİRBK
        {
            get
            {
                return this._TDEMİRBK;
            }
            set
            {
                if (this._TDEMİRBK != value)
                {
                    this.OnTDEMİRBKChanging(value);
                    this.SendPropertyChanging("TDEMİRBK");
                    this._TDEMİRBK = value;
                    this.SendPropertyChanged("TDEMİRBK");
                    this.OnTDEMİRBKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FERRİTTİN in the schema.
        /// </summary>
        [Column(Storage = "_FERRİTTİN", DbType = "NVARCHAR(50)")]
        public string FERRİTTİN
        {
            get
            {
                return this._FERRİTTİN;
            }
            set
            {
                if (this._FERRİTTİN != value)
                {
                    this.OnFERRİTTİNChanging(value);
                    this.SendPropertyChanging("FERRİTTİN");
                    this._FERRİTTİN = value;
                    this.SendPropertyChanged("FERRİTTİN");
                    this.OnFERRİTTİNChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for B12 in the schema.
        /// </summary>
        [Column(Storage = "_B12", DbType = "NVARCHAR(50)")]
        public string B12
        {
            get
            {
                return this._B12;
            }
            set
            {
                if (this._B12 != value)
                {
                    this.OnB12Changing(value);
                    this.SendPropertyChanging("B12");
                    this._B12 = value;
                    this.SendPropertyChanged("B12");
                    this.OnB12Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FOLAT in the schema.
        /// </summary>
        [Column(Storage = "_FOLAT", DbType = "NVARCHAR(50)")]
        public string FOLAT
        {
            get
            {
                return this._FOLAT;
            }
            set
            {
                if (this._FOLAT != value)
                {
                    this.OnFOLATChanging(value);
                    this.SendPropertyChanging("FOLAT");
                    this._FOLAT = value;
                    this.SendPropertyChanged("FOLAT");
                    this.OnFOLATChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TBİL in the schema.
        /// </summary>
        [Column(Name = @"[T BİL]", Storage = "_TBİL", DbType = "NVARCHAR(50)")]
        public string TBİL
        {
            get
            {
                return this._TBİL;
            }
            set
            {
                if (this._TBİL != value)
                {
                    this.OnTBİLChanging(value);
                    this.SendPropertyChanging("TBİL");
                    this._TBİL = value;
                    this.SendPropertyChanged("TBİL");
                    this.OnTBİLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DBİL in the schema.
        /// </summary>
        [Column(Name = @"[D BİL]", Storage = "_DBİL", DbType = "NVARCHAR(50)")]
        public string DBİL
        {
            get
            {
                return this._DBİL;
            }
            set
            {
                if (this._DBİL != value)
                {
                    this.OnDBİLChanging(value);
                    this.SendPropertyChanging("DBİL");
                    this._DBİL = value;
                    this.SendPropertyChanged("DBİL");
                    this.OnDBİLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LDH in the schema.
        /// </summary>
        [Column(Storage = "_LDH", DbType = "NVARCHAR(50)")]
        public string LDH
        {
            get
            {
                return this._LDH;
            }
            set
            {
                if (this._LDH != value)
                {
                    this.OnLDHChanging(value);
                    this.SendPropertyChanging("LDH");
                    this._LDH = value;
                    this.SendPropertyChanged("LDH");
                    this.OnLDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SEDİM in the schema.
        /// </summary>
        [Column(Storage = "_SEDİM", DbType = "NVARCHAR(50)")]
        public string SEDİM
        {
            get
            {
                return this._SEDİM;
            }
            set
            {
                if (this._SEDİM != value)
                {
                    this.OnSEDİMChanging(value);
                    this.SendPropertyChanging("SEDİM");
                    this._SEDİM = value;
                    this.SendPropertyChanged("SEDİM");
                    this.OnSEDİMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CRP in the schema.
        /// </summary>
        [Column(Storage = "_CRP", DbType = "NVARCHAR(50)")]
        public string CRP
        {
            get
            {
                return this._CRP;
            }
            set
            {
                if (this._CRP != value)
                {
                    this.OnCRPChanging(value);
                    this.SendPropertyChanging("CRP");
                    this._CRP = value;
                    this.SendPropertyChanged("CRP");
                    this.OnCRPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CPK in the schema.
        /// </summary>
        [Column(Storage = "_CPK", DbType = "NVARCHAR(50)")]
        public string CPK
        {
            get
            {
                return this._CPK;
            }
            set
            {
                if (this._CPK != value)
                {
                    this.OnCPKChanging(value);
                    this.SendPropertyChanging("CPK");
                    this._CPK = value;
                    this.SendPropertyChanged("CPK");
                    this.OnCPKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ÜRİKASİT in the schema.
        /// </summary>
        [Column(Name = @"[ÜRİK ASİT]", Storage = "_ÜRİKASİT", DbType = "NVARCHAR(50)")]
        public string ÜRİKASİT
        {
            get
            {
                return this._ÜRİKASİT;
            }
            set
            {
                if (this._ÜRİKASİT != value)
                {
                    this.OnÜRİKASİTChanging(value);
                    this.SendPropertyChanging("ÜRİKASİT");
                    this._ÜRİKASİT = value;
                    this.SendPropertyChanged("ÜRİKASİT");
                    this.OnÜRİKASİTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GFR in the schema.
        /// </summary>
        [Column(Storage = "_GFR", DbType = "NVARCHAR(50)")]
        public string GFR
        {
            get
            {
                return this._GFR;
            }
            set
            {
                if (this._GFR != value)
                {
                    this.OnGFRChanging(value);
                    this.SendPropertyChanging("GFR");
                    this._GFR = value;
                    this.SendPropertyChanged("GFR");
                    this.OnGFRChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KisiID in the schema.
        /// </summary>
        [Column(Storage = "_KisiID", DbType = "INT")]
        public System.Nullable<int> KisiID
        {
            get
            {
                return this._KisiID;
            }
            set
            {
                if (this._KisiID != value)
                {
                    if (this._Kisiler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKisiIDChanging(value);
                    this.SendPropertyChanging("KisiID");
                    this._KisiID = value;
                    this.SendPropertyChanged("KisiID");
                    this.OnKisiIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kisiler in the schema.
        /// </summary>
        [Association(Name="Kisiler_Laboratuar", Storage="_Kisiler", ThisKey="KisiID", OtherKey="KisiID", IsForeignKey=true)]
        public Kisiler Kisiler
        {
            get
            {
                return this._Kisiler.Entity;
            }
            set
            {
                Kisiler previousValue = this._Kisiler.Entity;
                if ((previousValue != value) || (this._Kisiler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Kisiler");
                    if (previousValue != null)
                    {
                        this._Kisiler.Entity = null;
                        previousValue.Laboratuars.Remove(this);
                    }
                    this._Kisiler.Entity = value;
                    if (value != null)
                    {
                        this._KisiID = value.KisiID;
                        value.Laboratuars.Add(this);
                    }
                    else
                    {
                        this._KisiID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Kisiler");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for HastaTakip.Tahsilat in the schema.
    /// </summary>
    [Table(Name = @"Tahsilat")]
    public partial class Tahsilat : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _TahsilatID;

        private System.Nullable<int> _KisiID;

        private System.Nullable<double> _Toplam;

        private System.Nullable<double> _Odenen;

        private System.Nullable<bool> _Bitti;

        private System.Nullable<System.DateTime> _Gun;
        #pragma warning restore 0649

        private EntityRef<Kisiler> _Kisiler;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTahsilatIDChanging(int value);
        partial void OnTahsilatIDChanged();
        partial void OnKisiIDChanging(System.Nullable<int> value);
        partial void OnKisiIDChanged();
        partial void OnToplamChanging(System.Nullable<double> value);
        partial void OnToplamChanged();
        partial void OnOdenenChanging(System.Nullable<double> value);
        partial void OnOdenenChanged();
        partial void OnBittiChanging(System.Nullable<bool> value);
        partial void OnBittiChanged();
        partial void OnGunChanging(System.Nullable<System.DateTime> value);
        partial void OnGunChanged();
        #endregion

        public Tahsilat()
        {
            this._Kisiler  = default(EntityRef<Kisiler>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for TahsilatID in the schema.
        /// </summary>
        [Column(Storage = "_TahsilatID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int TahsilatID
        {
            get
            {
                return this._TahsilatID;
            }
            set
            {
                if (this._TahsilatID != value)
                {
                    this.OnTahsilatIDChanging(value);
                    this.SendPropertyChanging("TahsilatID");
                    this._TahsilatID = value;
                    this.SendPropertyChanged("TahsilatID");
                    this.OnTahsilatIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KisiID in the schema.
        /// </summary>
        [Column(Storage = "_KisiID", DbType = "INT")]
        public System.Nullable<int> KisiID
        {
            get
            {
                return this._KisiID;
            }
            set
            {
                if (this._KisiID != value)
                {
                    if (this._Kisiler.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKisiIDChanging(value);
                    this.SendPropertyChanging("KisiID");
                    this._KisiID = value;
                    this.SendPropertyChanged("KisiID");
                    this.OnKisiIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Toplam in the schema.
        /// </summary>
        [Column(Storage = "_Toplam", DbType = "FLOAT")]
        public System.Nullable<double> Toplam
        {
            get
            {
                return this._Toplam;
            }
            set
            {
                if (this._Toplam != value)
                {
                    this.OnToplamChanging(value);
                    this.SendPropertyChanging("Toplam");
                    this._Toplam = value;
                    this.SendPropertyChanged("Toplam");
                    this.OnToplamChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Odenen in the schema.
        /// </summary>
        [Column(Storage = "_Odenen", DbType = "FLOAT")]
        public System.Nullable<double> Odenen
        {
            get
            {
                return this._Odenen;
            }
            set
            {
                if (this._Odenen != value)
                {
                    this.OnOdenenChanging(value);
                    this.SendPropertyChanging("Odenen");
                    this._Odenen = value;
                    this.SendPropertyChanged("Odenen");
                    this.OnOdenenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Bitti in the schema.
        /// </summary>
        [Column(Storage = "_Bitti", DbType = "BIT")]
        public System.Nullable<bool> Bitti
        {
            get
            {
                return this._Bitti;
            }
            set
            {
                if (this._Bitti != value)
                {
                    this.OnBittiChanging(value);
                    this.SendPropertyChanging("Bitti");
                    this._Bitti = value;
                    this.SendPropertyChanged("Bitti");
                    this.OnBittiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gun in the schema.
        /// </summary>
        [Column(Storage = "_Gun", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> Gun
        {
            get
            {
                return this._Gun;
            }
            set
            {
                if (this._Gun != value)
                {
                    this.OnGunChanging(value);
                    this.SendPropertyChanging("Gun");
                    this._Gun = value;
                    this.SendPropertyChanged("Gun");
                    this.OnGunChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Kisiler in the schema.
        /// </summary>
        [Association(Name="Kisiler_Tahsilat", Storage="_Kisiler", ThisKey="KisiID", OtherKey="KisiID", IsForeignKey=true)]
        public Kisiler Kisiler
        {
            get
            {
                return this._Kisiler.Entity;
            }
            set
            {
                Kisiler previousValue = this._Kisiler.Entity;
                if ((previousValue != value) || (this._Kisiler.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Kisiler");
                    if (previousValue != null)
                    {
                        this._Kisiler.Entity = null;
                        previousValue.Tahsilats.Remove(this);
                    }
                    this._Kisiler.Entity = value;
                    if (value != null)
                    {
                        this._KisiID = value.KisiID;
                        value.Tahsilats.Add(this);
                    }
                    else
                    {
                        this._KisiID = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Kisiler");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
